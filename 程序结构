一、全局变量
定义在函数外面的变量是全局变量
全局变量具有全局的生存期和作用域
他们与任何函数都无关
在任何函数内部都能使用它

全局变量初始值
没有做初始值的全局变量会得到0值
指针会得到NULL值
只能用编译时刻已知的值来初始化全局变量
它们的初始化发生在main函数之前
如果函数内部存在与全局变量同名的变量则全局变量被隐藏

本地变量
在本地变量定义加上static修饰符就成为静态本地变量
当函数离开时，静态本地变量会继续存在并保持其值
静态本地变量的初始化只会在第一次进入这个函数时做，以后进入函数时会保持上次离开时的值一样
静态本地变量实际上是特殊的全局变量
他们位于相同的内存区域
静态本地变量具有全局的生存期，函数内的局部作用域
static在这里的意思是局部作用域（本地可访问）

返回指针的函数
返回本地变量的地址是很危险的
返回全局变量和静态本地变量是安全的
返回在函数内malloc的内存是安全的，但容易造成问题
最好的做法是返回传入的指针

二、编译预处理命令
#开头的是编译预处理指令
#define用来定义一个宏（#define 名字 值）注意没有结尾分号
预定义的宏
_LINE_ 行号
_FILE_ 文件的文件名
_DATE_  _TIME_ 编译时候的是日期和时间
_STDC_  C语言标准

头文件
把函数原型放到一个头文件（.h结尾）中，在需要调用这个函数的源代码文件（.c文件）中#include（#include "头文件名"），编译器就知道函数的原型
标准头文件结构：
#ifndef __LIST_HEAD_
#define __LIST_HEAD_



#endif
